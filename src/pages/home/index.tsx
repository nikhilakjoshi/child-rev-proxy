import clsx from "clsx";
import type {
  GetServerSidePropsContext,
  InferGetServerSidePropsType,
} from "next";
import Head from "next/head";
import { Rubik } from "next/font/google";
import { useRouter } from "next/router";

export const getServerSideProps = (ctx: GetServerSidePropsContext) => {
  console.log("cookie-headers", ctx.req.headers.cookie);
  return {
    props: {
      cookie: ctx.req.headers.cookie,
      host: ctx.req.headers.host,
    },
  };
};

const font = Rubik({
  subsets: ["latin-ext"],
});

export default function Banking(
  props: InferGetServerSidePropsType<typeof getServerSideProps>,
) {
  const router = useRouter();
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={clsx("z-20 flex min-h-screen flex-col", font.className)}>
        <nav className="bg-purple-100 px-20 py-4">
          <h2 className="text-xl font-semibold">
            Child App{" "}
            {props.host ? (
              <div className="inline">
                {" "}
                - Hosted on{" "}
                <span className="inline-block rounded bg-gray-300 px-2 py-0.5 font-mono text-gray-700">
                  {props.host}
                </span>
              </div>
            ) : (
              ""
            )}
          </h2>
        </nav>
        {props.cookie && (
          <div className="grow bg-rose-100 px-20 py-4">{`cookie -> ${props.cookie}`}</div>
        )}
      </main>
    </>
  );
}
